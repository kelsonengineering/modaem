#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass book
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single 
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Chapter

ModAEM script files
\begin_inset LatexCommand \label{cha:script-files}

\end_inset 

 
\layout Standard

ModAEM execution is controlled by the use of a "ModAEM script file" (with
 the extension 
\family sans 
.aem
\family default 
), and a "ModAEM name file" (called 
\family sans 
modaem.nam
\family default 
).
 These files are the only input files that are required by the model.
\layout Section

The ModAEM name file 
\family typewriter 
modaem.nam
\begin_inset LatexCommand \label{sub:name-file}

\end_inset 

 
\layout Standard

The standard library for the Fortran-95 language does not provide a mechanism
 for gathering command-line arguments (e.g.
 the '
\family typewriter 
int main(int argc, char **argv)
\family default 
' in a C or C++ program or 
\family typewriter 
sys.argv[]
\family default 
 in Python).
 Although nearly all current Fortran-95 compilers provide a library routine
 for this task, they are not syntactically consistent.
 One of the design objectives of the ModAEM project is that the code should
 be as portable as possible, so language extensions have been carefully
 avoided.
 Therefore, the "official" ModAEM release code uses a file called 
\family sans 
modaem.nam
\family default 
 in the current working directory when the program begins execution to find
 the ModAEM script file.
 The name file provides the base file name for the ModAEM script file (and
 may provide other features in the future).
 Developers are encouraged to add platform-specific support for command-line
 arguments if they desire
\begin_inset Foot
collapsed true

\layout Standard

It is expected that developers (particularly those who need a platform-specific
 version of ModAEM) will add the ability to fetch command-line arguments
 in the version of ModAEM that ships with their code.
 The addition of this feature is compiler-dependent.
 Be advised that under the GNU General Public License (GPL), you are required
 to provide the source code along with the executable (or at least tell
 the user where to get it), when you first distribute a customized version
 of ModAEM.
 The author will provide a clearing-house for platform-specific and compiler--sp
ecific versions of at the ModAEM website 
\family typewriter 
http://modaem.wittmanhydro.com
\family default 
.
 It is understood that some vendors may wish to add a platform-specific
 GUI-style display to ModAEM (e.g.
 in a style similar to the MODFLOW/Win32 code that ships with the popular
 
\emph on 
Groundwater Vistas
\emph default 
 MODFLOW GUI).
 It will be much appreciated if someone will make such a version available
 under GPL.
 Although it is much preferred that such an extension is released under
 GPL, the copyright holders understand the developer's concerns and will
 consider requests (we make no guarantees 
\emph on 
a priori
\emph default 
) for special licensing arrangements for such extensions.However, we do not
 anticipate a willingness to engage in special licensing exceptions for
 computational features that may be added to the code.
\end_inset 

.
\layout Subsection

Contents of the name file 
\layout Standard

The ModAEM name file 
\family sans 
modaem.nam
\family default 
 can be created with any text editor.
 
\family sans 
modaem.nam
\family default 
 contains up to three lines of text, as follows:
\layout Paragraph

Line 1 -- Base file name for the model run
\layout Standard

The first line of the name file contains the 
\begin_inset Quotes eld
\end_inset 

base
\begin_inset Quotes erd
\end_inset 

 name of the files for the model run.
 For example, if the model input data are contained in a file called 
\family sans 
modaem.aem
\family default 
, then the contents of 
\family sans 
modaem.nam
\family default 
 would be:
\layout LyX-Code

modaem
\layout Standard

The extension 
\family sans 
.aem
\family default 
 is appended to the file name by ModAEM.
 In addition, two output files will be created using the same base name,
 '
\family sans 
modaem
\family default 
':
\layout Description


\family sans 
\series medium 
modaem.err
\family default 
\series default 
 Will be written as the "message" file.
 This file echoes program input and messages issued during execution.
 It may be used as a run log file (and to see the results of some processing
 directives).
 Although some model results can be sent to the message file, it is not
 appropriate for extracting model results (e.g.
 heads) for use in GUI programs; the "inquiry" files written by module INQ
 (Section 5.9) are designed for this feature.
\layout Description


\family sans 
\series medium 
modaem.out
\family default 
\series default 
 Will be written as the "output" file.
 This file recieves an HTML document listing of the solution results, which
 may be useful in debugging.
 The output file is not appropriate for loading results to be displayed
 in GUI programs; the "inquiry" files written by module INQ (Section 5.9)
 are designed for this feature.
\layout Paragraph

Line 2 -- Name of the previous solution file
\begin_inset Foot
collapsed true

\layout Standard

The 
\begin_inset Quotes eld
\end_inset 

load previous solution
\begin_inset Quotes erd
\end_inset 

 feature is not available in ModAEM 1.4.0.
 It will be implemented in ModAEM-1.4.1.
\end_inset 


\layout Standard

The second file named in the name file is an optional file that contains
 the saved results from a previous solution that are to be reloaded, for
 example, to trace particles from a prior solution without the need for
 re-solving.
 If it is provided, the results are read from the previous solution file
 after the problem is defined (see the 
\family sans 
\series bold 
aem
\family default 
\series default 
 directive and related information below), when the 
\family sans 
\series bold 
sol
\family default 
\series default 
 directive is encountered.
 To 
\begin_inset Quotes eld
\end_inset 

solve
\begin_inset Quotes erd
\end_inset 

 the model byCool pictures? Why would we do all this work if we weren't
 going to make cool pictures? -- Mark Bakker
\layout Standard

simply reloading the solution, issue the directive 
\family typewriter 
sol\SpecialChar ~
0
\family default 
 after the problem definition is complete.
 If the previous solution file is missing or if the file is empty, a warning
 will be issued and execution will continue.
 However, if the file is not empty, a fatal error results if the contents
 of the previous solution file are inconsistent with the problem definition.
\layout Standard

The file name may have any extension that the modeler desires, although
 by convention, the extention 
\family sans 
.pre
\family default 
 is recommended.
 If the name of previous solution file is omitted from the name file, no
 previous solution will be loaded.
\layout Paragraph

Line 3 -- Name of the file where solution results are to be written
\begin_inset Foot
collapsed true

\layout Standard

The 
\begin_inset Quotes eld
\end_inset 

save solution
\begin_inset Quotes erd
\end_inset 

 feature is not available in ModAEM 1.4.0.
 It will be implemented in ModAEM-1.4.1.
\end_inset 


\layout Standard

The third file named in the name file is an optional file where the results
 of the solution are to be written, for example, for use as the initial
 condition in a future ModAEM run.
 If it is provided, ModAEM will write the solution when the solution procedure
 is complete.
 The file may be reloaded by specifying it in the second line of a future
 name file (see above).
 
\layout Standard

The file name may have any extension that the modeler desires, although
 by convention, the extention 
\family sans 
.pre
\family default 
 is recommended.
 If the name of the save file is omitted from the name file, no solution
 will be saved.
\layout Section

The AEM script file (
\family sans 
.
\series medium 
aem
\family default 
\series default 
 file) 
\layout Standard

The AEM script file provides model elements and processing directives to
 ModAEM.
 The AEM script file can have any base file name (as specified in the modaem.nam
 file) and must have the extension 
\family sans 
.aem
\family default 
.
 The AEM script file is a flat text file that can be created with any text
 editor.
 Program directives are entered one per line.
\layout Standard

The script file is divided into two sections, the "problem definition section"
 (or "AEM section") and the "processing section".
 Typically, ModAEM script files look like this:
\layout LyX-Code

aem
\layout LyX-Code

  aqu ...
\layout LyX-Code

    # aquifer description goes here
\layout LyX-Code

  end
\layout LyX-Code

  # other module sections go here...
\layout LyX-Code

  wl0 10
\layout LyX-Code

    ...
 discharge-specified well data goes in here ...
 
\layout LyX-Code

    # end of well data 
\layout LyX-Code

  end 
\layout LyX-Code

  # end of aem data 
\layout LyX-Code

end 
\layout LyX-Code

# processing directives go here ...
 
\layout LyX-Code

# End-of-data mark 
\layout LyX-Code

eod
\layout Standard

The AEM section of the input file
\begin_inset Foot
collapsed true

\layout Standard

The attractive indentation style of the input file is optional, but highly
 recommended.
 By convention, each section of the input file is indented two spaces for
 readability.
 ModAEM ignores the indentation when reading program input.
 Currently (at this writing, we are at version 1.4.0-rc3),ModAEM behaves unpredict
ibly when it encounters tab characters (ASCII 0x09); folding of tabs into
 spaces on input will be implemented soon.
\end_inset 

 is the portion contained between the 
\family typewriter 
aem
\family default 
 and 
\family typewriter 
end
\family default 
 directives in lines 1 and 14 of the above listing.
 Within the AEM section, input for the various element definition modules
 (see Chapter 
\begin_inset LatexCommand \ref{cha:script-files}

\end_inset 

) are provided.
\layout Standard

The processing section follows the problem definition section of the script
 file.
 The various processing directives that are available are discussed in Chapter
 
\begin_inset LatexCommand \ref{cha:Processing-Directives}

\end_inset 

.
\layout Subsection

Directives which are common to all input modules
\layout Standard

The following directives are available in all ModAEM input modules.
\layout Subsubsection

Comments
\layout Standard

Comment lines in the AEM script file start with a hash mark (
\family typewriter 
#
\family default 
) in the first column.
 Comment lines are ignored by ModaEM.
 For example:
\layout LyX-Code

# This is a comment line
\layout Subsubsection

Exiting a module (
\family sans 
\series medium 
end
\family default 
\series default 
 directive) 
\layout Standard

The 
\family typewriter 
end
\family default 
 directive causes ModAEM to leave the current module.
 For example, when in the 
\family sans 
wl0
\family default 
 module (which is started with the 
\family typewriter 
wl0
\family default 
 directive), the end directive returns processing to the AEM input module:
\layout LyX-Code

# the aem section is used to define the problem aem
\layout LyX-Code

# other module sections go here...
 
\layout LyX-Code

wl0 10
\layout LyX-Code

...
 discharge-specified well data goes in here ...
 
\layout LyX-Code

# end of well data end # end of aem data end 
\layout LyX-Code

# processing directives go here ...
 
\layout LyX-Code

# End-of-data mark 
\layout LyX-Code

eod
\layout Subsection

Enabling debugging code (
\family sans 
\series medium 
dbg
\family default 
\series default 
 directive) 
\layout Standard

The 
\family typewriter 
dbg
\family default 
 directive is used to turn code marked as 'debug' code on or off during
 execution (useful for program debugging).
 Debug code is enabled or disabled at the level of a specific module.
 The ModAEM source code contains many assertions that can be used to test
 for internal errors in the code.
 The 
\family typewriter 
dbg
\family default 
 command does not affect the detection of errors in program input, however.
 This command will typically be used only by developers.
\layout Subsection

Other directives for specific tasks 
\layout Subsubsection

Begin defining a model problem domain (
\family sans 
\series medium 
aem
\family default 
\series default 
 directive)
\layout Standard

The aem directive begins the problem definition section of the ModAEM input
 file.
 See for a description of the various directives that may be used in the
 problem definition section.
\layout Paragraph

Usage:
\layout LyX-Code

aem
\layout LyX-Code

  ...
 put model definition directives here ...
 
\layout LyX-Code

end
\layout Subsubsection

Processing directives 
\layout Standard

The various processing directives that are available once a problem has
 been defined in the AEM section are described in Chapter 
\begin_inset LatexCommand \ref{cha:Processing-Directives}

\end_inset 

.
\the_end
